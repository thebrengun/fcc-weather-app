{"version":3,"sources":["assets/ic_location_on_white_24px.svg","assets/ic_location_on_black_24px.svg","providers/index.js","reducers/location.reducer.js","reducers/weather.reducer.js","reducers/sky.reducer.js","reducers/lookupLocation.reducer.js","components/LookupLocation.js","components/ConvertTemp.js","reducers/temperatureSystem.reducer.js","components/CurrentWeather.js","components/ForecastWeather.js","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formatRequest","base","options","Object","keys","reduce","s","k","i","fetchGeocode","obj","objectSpread","key","process","GEOCODE","fetch","getLocationInfo","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","lat","latitude","lon","longitude","locName","concat","loc","Error","fetchWeather","config","request","fetchJsonp","then","handleResponse","response","json","cod","message","fetchCurrentWeather","setLatLon","_ref","type","setLocName","name","getLocationName","locationInfo","latlng","status","catch","err","reverseGeocode","results","formatted_address","address_components","getLocation","_ref2","locObj","city","country","postal","_loc$split$map","split","map","trim","_loc$split$map2","slicedToArray","getBestResult","selectedResult","filter","_ref3","length","types","indexOf","slice","defaultState","forecastWeather","list","currentWeather","main","temp","undefined","weather","getForecasts","dispatch","getState","forecasts","id","dt","sunrise","sunset","sys","clouds","all","sky","payload","setForecastWeather","setForecastWeatherError","updateSearchFieldAndLookupSuggestions","searchFieldText","updateSearchField","state","lookupLocation","debounceLookupSuggestions","cancel","fn","debounce","q","address","encodeURIComponent","suggestions","maxWait","editingSearchField","searchField","LookupLocation","componentDidUpdate","prevProps","editing","_this","props","focus","_this2","this","react_default","a","createElement","className","onClick","editSearchField","src","locationIconBlk","locationIcon","alt","value","onChange","onBlur","e","setTimeout","blurSearchField","ref","locationName","locationSuggestions","idx","geometry","place_id","selectLocation","location","lng","PureComponent","connect","target","latLon","round","num","places","arguments","mult","Math","pow","kelvinToCelsiusRounded","K","kelvinToCelsius","kelvinToFarenheitRounded","kelvinToFarenheit","ConvertTemp","convert","kelvin","temperatureSystem","toggle","String","fromCharCode","CurrentWeather","pending","error","icon","src_components_ConvertTemp","description","join","defaultProps","ForecastWeather","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","today","Date","getDay","day","weekday","0","1","2","3","4","5","6","max","min","iconIdx","App","componentWillReceiveProps","nextProps","_this$props$location","_nextProps$location","nextLat","nextLon","determineLocation","src_components_LookupLocation","src_components_CurrentWeather","data","src_components_ForecastWeather","Component","middlewares","thunk","store","createStore","combineReducers","action","abbr","localStorage","getItem","JSON","parse","loadStateFromLocalStorage","applyMiddleware","apply","subscribe","setItem","stringify","saveStateToLocalStorage","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","es","src_App_0","document","getElementById","URL","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a168d632.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ic_location_on_white_24px.9106449c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_location_on_black_24px.4489927c.svg\";","import fetchJsonp from 'fetch-jsonp';\n\nconst formatRequest = (base, options) => {\n  return base + Object.keys(options).reduce((s, k, i) => {\n    let prefix = i === 0 ? '?' : '&';\n    return s + prefix + k + '=' + options[k];\n  }, '');\n};\n\nconst getGeocodeInfo = (q) => {\n  return fetchGeocode({address: encodeURIComponent(q)}).then(\n    response => {\n      if(response.status >= 400) {\n        throw new Error('Bad response');\n      }\n      return response.json();\n    }\n  ).catch(\n    err => {throw err;}\n  );\n};\n\nconst reverseGeocode = ({lat, lon}) => {\n  return fetchGeocode({latlng: lat + ',' + lon}).then(\n    response => {\n      if(response.status >= 400) {\n        throw new Error('Bad response');\n      }\n      return response.json();\n    }\n  ).catch(\n    err => {throw err;}\n  );\n};\n\nconst fetchGeocode = (obj) => {\n  const url = 'https://maps.googleapis.com/maps/api/geocode/json';\n  const options = {...obj, key: process.env.GEOCODE};\n  return fetch(formatRequest(url, options));\n};\n\nconst getLocationInfo = () => {\n  return new Promise(\n    (resolve, reject) => {\n      if(\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          position => {\n            const {latitude: lat, longitude: lon} = position.coords;\n            if(lat && lon) {\n              resolve({\n                locName: `${lat}, ${lon}`,\n                loc: {lat, lon}\n              });\n            } else {\n              reject(new Error('Could not get latitude and longitude'));\n            }\n          }, \n          reject\n        );\n      } else {\n        reject(new Error('Geolocation not available'));\n      }\n    }\n  );\n};\n\nconst fetchIPInfo = () => {\n  return fetch('https://ipinfo.io/json').then(\n    response => {\n      if(response.status >= 400) {\n        throw new Error('Bad response');\n      }\n      return response.json()\n    }\n  ).catch(\n    err => {throw err;}\n  ).then(\n    ({city, country, postal, loc}) => {\n      let locObj;\n      if(!loc && !(city && country)) {\n        throw new Error('Unable to get location from IP address.');\n      } else if(loc) {\n        const [ lat, lon ] = loc.split(',').map(s => s.trim());\n        locObj = {lat, lon};\n      }\n      return ({locName: `${city}, ${country}`, loc: locObj});\n    }\n  ).catch(\n    err => {throw err;}\n  );\n};\n\nconst fetchWeather = (config) => {\n  const url = 'https://script.google.com/macros/s/AKfycbwjTLjrLNuQfoaHCVqNRQ08GBuC5bUTrDiKzJf10jlh5UUnSug/exec';\n  const request = formatRequest(url, config);\n  return fetchJsonp(request).then(handleResponse);\n};\n\nconst handleResponse = (response) => {\n  const json = response.json();\n  if(json.cod >= 400) {\n    throw new Error(json.message);\n  }\n  return json;\n};\n\nconst fetchForecast = (config) => {\n  config['future'] = 1;\n  return fetchWeather(config);\n};\n\nconst fetchCurrentWeather = fetchWeather;\n\nexport { fetchCurrentWeather, fetchForecast, fetchIPInfo, getGeocodeInfo, getLocationInfo, reverseGeocode };","import { fetchIPInfo, getLocationInfo, reverseGeocode } from '../providers/index.js';\n\nconst SET_LAT_LON = 'SET_LAT_LON';\nconst SET_LOC_NAME = 'SET_LOC_NAME';\n\nconst setLatLon = ({lat, lon}) => ({type: SET_LAT_LON, lat, lon});\nconst setLocName = (name) => ({type: SET_LOC_NAME, name});\nconst determineLocation = () => (dispatch, getState) => {\n\tdispatch(setLocName('Fetching location...'));\n\tgetLocation().then(\n\t\t(locationInfo) => {\n\t\t\tdispatch(setLatLon(locationInfo.loc));\n\t\t\tgetLocationName(locationInfo).then(\n\t\t\t\t({results}) => dispatch(setLocName(getBestResult(results).formatted_address || ''))\n\t\t\t);\n\t\t}\n\t);\n};\n\nconst getLocationName = (locationInfo) => {\n\treturn reverseGeocode(locationInfo.loc).catch(err => ({\n\t\tresults: [{\n\t\t\tformatted_address: locationInfo.locName,\n\t\t\taddress_components: []\n\t\t}]\n\t}));\n};\n\nconst getLocation = () => {\n\tconst returnDefaultLocation = (err) => ({\n\t\tlocName: \"Hell's Kitchen, New York City\",\n\t\tloc: {\n\t\t\tlat: 40.7630299,\n\t\t\tlon: -73.9950965\n\t\t}\n\t});\n\treturn fetchIPInfo().catch(getLocationInfo).catch(returnDefaultLocation);\n};\n\nconst getBestResult = (results) => {\n\t// Selected result should be the first result that doesn't contain point_of_interest, establishment, street_number, or route\n\tlet selectedResult = results.filter(\n\t\t({address_components}) => {\n\t\t\tfor(let i = 0; i < address_components.length; i++) {\n\t\t\t\tconst types = address_components[i].types;\n\t\t\t\tif(\n\t\t\t\t\ttypes.indexOf('point_of_interest') > -1 || \n\t\t\t\t\ttypes.indexOf('establishment') > -1 || \n\t\t\t\t\ttypes.indexOf('street_number') > -1 || \n\t\t\t\t\ttypes.indexOf('route')  > -1\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t).slice(0, 1);\n\n\tif(selectedResult.length === 0 && results.length > 0) {\n\t\tselectedResult = results[0];\n\t} else if(selectedResult.length === 0) {\n\t\tselectedResult = {};\n\t} else {\n\t\tselectedResult = selectedResult[0];\n\t}\n\n\treturn selectedResult;\n};\n\nconst defaultState = {\n\tname: 'New York, NY',\n\tlat: 40.712775,\n\tlon: -74.005973\n};\n\nconst reducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase SET_LOC_NAME:\n\t\t\treturn {...state, name: action.name};\n\t\tcase SET_LAT_LON:\n\t\t\treturn {...state, lat: action.lat, lon: action.lon};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport { reducer, setLatLon, setLocName, determineLocation };","import { fetchCurrentWeather, fetchForecast } from '../providers/index.js';\nimport { setSky } from './sky.reducer.js';\n\nconst defaultState = {\n\tforecastWeather: {list: []},\n\tcurrentWeather: {\n\t\tmain: {temp: undefined},\n\t\tweather: []\n\t}\n};\n\nconst SET_CURRENT_WEATHER = 'SET_CURRENT_WEATHER';\nconst SET_FORECAST_WEATHER = 'SET_FORECAST_WEATHER';\n\nconst FETCH_CURRENT_WEATHER = 'FETCH_CURRENT_WEATHER';\nconst FETCH_FORECAST_WEATHER = 'FETCH_FORECAST_WEATHER';\n\nconst SET_CURRENT_WEATHER_ERROR = 'SET_CURRENT_WEATHER_ERROR';\nconst SET_FORECAST_WEATHER_ERROR = 'SET_FORECAST_WEATHER_ERROR';\n\nconst setCurrentWeather = (weather) => ({type: SET_CURRENT_WEATHER, payload: weather});\nconst setForecastWeather = (weather) => ({type: SET_FORECAST_WEATHER, payload: weather});\nconst setPendingCurrentWeather = () => ({type: FETCH_CURRENT_WEATHER});\nconst setPendingForecastWeather = () => ({type: FETCH_FORECAST_WEATHER});\nconst setCurrentWeatherError = (err) => ({type: SET_CURRENT_WEATHER_ERROR, payload: err});\nconst setForecastWeatherError = (err) => ({type: SET_FORECAST_WEATHER_ERROR, payload: err});\n\nconst getForecasts = ({lat, lon}) => (dispatch, getState) => {\n\tconst forecasts = {};\n\tdispatch(setPendingCurrentWeather());\n\tfetchCurrentWeather({lat, lon}).catch(\n\t\terr => {\n\t\t\treturn err;\n\t\t}\n\t).then(\n\t\t(currentWeather) => {\n\t\t\tforecasts['currentWeather'] = currentWeather;\n\t\t\tdispatch(setPendingForecastWeather());\n\t\t\treturn fetchForecast({id: currentWeather.id});\n\t\t},\n\t\terr => {\n\t\t\tforecasts['currentWeather'] = err;\n\t\t\treturn forecasts;\n\t\t}\n\t).then(\n\t\t(forecastWeather) => {\n\t\t\tforecasts['forecastWeather'] = forecastWeather;\n\t\t\treturn forecasts;\n\t\t},\n\t\terr => {\n\t\t\tforecasts['forecastWeather'] = err;\n\t\t\treturn forecasts;\n\t\t}\n\t).then(\n\t\t(forecasts) => {\n\t\t\tif(forecasts.currentWeather && forecasts.currentWeather instanceof Error === false) {\n\t\t\t\tdispatch(setSky(\n\t\t\t\t\tforecasts.currentWeather.dt, \n\t\t\t\t\tforecasts.currentWeather.sys.sunrise, \n\t\t\t\t\tforecasts.currentWeather.sys.sunset, \n\t\t\t\t\tforecasts.currentWeather.clouds.all\n\t\t\t\t));\n\t\t\t\tdispatch(setCurrentWeather(forecasts.currentWeather));\n\t\t\t} else {\n\t\t\t\tdispatch(setCurrentWeatherError('Could not get current weather: ' + forecasts.currentWeather.message));\n\t\t\t}\n\t\t\tif(forecasts.forecastWeather && forecasts.forecastWeather instanceof Error === false) {\n\t\t\t\tdispatch(setForecastWeather(forecasts.forecastWeather));\n\t\t\t} else {\n\t\t\t\tdispatch(setForecastWeatherError('Could not get forecast: ' + forecasts.forecastWeather.message));\n\t\t\t}\n\t\t}\n\t);\n};\n\nconst reducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase FETCH_CURRENT_WEATHER:\n\t\t\treturn {...state, currentWeather: {...state.currentWeather, pending: true, error: undefined}};\n\t\tcase FETCH_FORECAST_WEATHER:\n\t\t\treturn {...state, forecastWeather: {...state.forecastWeather, pending: true, error: undefined}};\n\t\tcase SET_CURRENT_WEATHER_ERROR:\n\t\t\treturn {...state, currentWeather: {...state.currentWeather, pending: false, error: action.payload}};\n\t\tcase SET_FORECAST_WEATHER_ERROR:\n\t\t\treturn {...state, forecastWeather: {...state.forecastWeather, pending: false, error: action.payload}};\n\t\tcase SET_CURRENT_WEATHER:\n\t\t\treturn {...state, currentWeather: {data: action.payload, pending: false, error: undefined}};\n\t\tcase SET_FORECAST_WEATHER:\n\t\t\treturn {...state, forecastWeather: {data: action.payload, pending: false, error: undefined}};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport { reducer, getForecasts };","const SET_SKY = 'SET_SKY';\n\nconst setSky = (dt, sunrise, sunset, clouds) => ({\n\ttype: SET_SKY,\n\tsky: dt >= sunrise && dt <= sunset ? 'day' : 'night'\n});\n\nconst reducer = (state = null, action) => {\n\tswitch(action.type) {\n\t\tcase SET_SKY:\n\t\t\treturn action.sky;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport { reducer, setSky };","import debounce from 'lodash/debounce';\nimport { getGeocodeInfo } from '../providers/index.js';\n\nconst EDIT_SEARCH_FIELD = 'EDIT_SEARCH_FIELD';\nconst BLUR_SEARCH_FIELD = 'BLUR_SEARCH_FIELD';\nconst UPDATE_SEARCH_FIELD = 'UPDATE_SEARCH_FIELD';\nconst UPDATE_SUGGESTIONS = 'UPDATE_SUGGESTIONS';\nconst DEBOUNCE_LOOKUP_SUGGESTIONS = 'DEBOUNCE_LOOKUP_SUGGESTIONS';\n\nconst editSearchField = () => ({type: EDIT_SEARCH_FIELD});\nconst blurSearchField = () => ({type: BLUR_SEARCH_FIELD});\nconst updateSearchField = (searchFieldText) => ({type: UPDATE_SEARCH_FIELD, searchFieldText});\nconst updateSuggestions = (suggestions) => ({type: UPDATE_SUGGESTIONS, suggestions});\nconst debounceLookupSuggestions = (fn) => ({type: DEBOUNCE_LOOKUP_SUGGESTIONS, fn});\nconst updateSearchFieldAndLookupSuggestions = (searchFieldText) => (dispatch, getState) => {\n\tdispatch(updateSearchField(searchFieldText));\n\tconst { lookupLocation: state } = getState();\n\tif(state.debounceLookupSuggestions) { state.debounceLookupSuggestions.cancel(); }\n\tif(searchFieldText) {\n\t\tconst debouncedLookupSuggestionsFn = () => getGeocodeInfo(searchFieldText).then(\n\t\t\t({results}) => dispatch(updateSuggestions(results))\n\t\t);\n\t\tconst fn = debounce(debouncedLookupSuggestionsFn, 600, {maxWait: 1000});\n\t\tfn();\n\t\tdispatch(debounceLookupSuggestions(fn));\n\t}\n};\n\nconst defaultState = {\n\teditingSearchField: false,\n\tsearchField: '',\n\tsuggestions: []\n};\n\nconst reducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase DEBOUNCE_LOOKUP_SUGGESTIONS:\n\t\t\treturn {...state, debounceLookupSuggestions: action.fn};\n\t\tcase UPDATE_SUGGESTIONS:\n\t\t\t// Don't update suggestions if not actively editing the location\n\t\t\treturn {...state, suggestions: state.editingSearchField ? action.suggestions : []};\n\t\tcase UPDATE_SEARCH_FIELD:\n\t\t\treturn {...state, searchField: action.searchFieldText};\n\t\tcase EDIT_SEARCH_FIELD:\n\t\t\treturn {...state, editingSearchField: true};\n\t\tcase BLUR_SEARCH_FIELD:\n\t\t\tif(state.debounceLookupSuggestions) {\n\t\t\t\tstate.debounceLookupSuggestions.cancel();\n\t\t\t}\n\t\t\treturn {...state, editingSearchField: false, searchField: '', suggestions: []};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport { reducer, editSearchField, blurSearchField, updateSearchFieldAndLookupSuggestions, updateSuggestions };","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './LookupLocation.css';\nimport { connect } from 'react-redux';\nimport { editSearchField, blurSearchField, updateSearchFieldAndLookupSuggestions } from '../reducers/lookupLocation.reducer.js';\nimport { setLatLon, setLocName } from '../reducers/location.reducer.js';\nimport locationIcon from '../assets/ic_location_on_white_24px.svg';\nimport locationIconBlk from '../assets/ic_location_on_black_24px.svg';\n\nclass LookupLocation extends PureComponent {\n\n  componentDidUpdate = (prevProps) => {\n    if(prevProps.editing === false && this.props.editing === true) {\n      this.searchField.focus();\n    }\n  }\n\n  render() {\n    return (\n      <div className={`location-box-wrapper ${this.props.sky}`}>\n        <div className={`location-box${this.props.editing ? ' editing' : ''}`}>\n          <div className=\"location-icon\" onClick={this.props.editSearchField}>\n            <img src={this.props.editing ? locationIconBlk : locationIcon} alt=\"Location Pin\" />\n          </div>\n          {this.props.editing ? \n            <input \n              value={this.props.searchField} \n              onChange={this.props.updateSearchField} \n              onBlur={(e) => setTimeout(this.props.blurSearchField, 50)} \n              className=\"location-search-field\" \n              ref={(ref) => {this.searchField = ref;}}\n            /> :\n            <div className=\"location-string\" onClick={this.props.editSearchField}>\n              {this.props.locationName}\n            </div>\n          }\n        </div>\n        {this.props.locationSuggestions.length > 0 && \n          <div className=\"location-suggestions\">\n            {this.props.locationSuggestions.map(\n              ({formatted_address, geometry, place_id}, idx) => \n                <div \n                  onClick={this.props.selectLocation(\n                    formatted_address, \n                    {lat: geometry.location.lat, lon: geometry.location.lng}\n                  )} \n                  key={`${idx}-${place_id}`}\n                >\n                  {formatted_address}\n                </div>\n            )}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nLookupLocation.propTypes = {\n  editing: PropTypes.bool,\n  editSearchField: PropTypes.func,\n  searchField: PropTypes.string,\n  updateSearchField: PropTypes.func,\n  blurSearchField: PropTypes.func,\n  locationName: PropTypes.string,\n  locationSuggestions: PropTypes.array,\n  selectLocation: PropTypes.func\n};\n\nconst mapStateToProps = ({location, lookupLocation, sky}) => ({\n  locationName: location.name,\n  locationSuggestions: lookupLocation.suggestions,\n  searchField: lookupLocation.searchField,\n  editing: lookupLocation.editingSearchField,\n  sky\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  editSearchField: (e) => dispatch(editSearchField()),\n  updateSearchField: (e) => dispatch(updateSearchFieldAndLookupSuggestions(e.target.value)),\n  blurSearchField: () => dispatch(blurSearchField()),\n  selectLocation: (name, latLon) => (e) => {\n    dispatch(setLocName(name));\n    dispatch(setLatLon(latLon));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LookupLocation);","import './ConvertTemp.css';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleTemperatureSystem } from '../reducers/temperatureSystem.reducer.js';\n\nconst round = (num, places = 0) => {\n  const mult = Math.pow(10, places);\n  return Math.round(num * mult) / mult;\n};\nconst kelvinToCelsiusRounded = K => round(kelvinToCelsius(K));\nconst kelvinToFarenheitRounded = K => round(kelvinToFarenheit(K));\nconst kelvinToFarenheit = (temp) => temp * (9 / 5) - 459.67;\nconst kelvinToCelsius = (temp) => temp - 273.15;\n\nclass ConvertTemp extends PureComponent {\n\tconvert = (kelvin) => {\n\t\treturn this.props.temperatureSystem === 'F' ? \n\t\t\tkelvinToFarenheitRounded(kelvin) : \n\t\t\tkelvinToCelsiusRounded(kelvin);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<span onClick={this.props.toggle} className=\"temp\">\n\t\t\t\t<span>{this.props.kelvin ? this.convert(this.props.kelvin) : '--'}</span>\n\t\t\t\t<span className=\"temp-unit\">\n\t\t\t\t\t{String.fromCharCode(176)}{this.props.temperatureSystem}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nConvertTemp.propTypes = {\n\tkelvin: PropTypes.number,\n\tconvert: PropTypes.func,\n\ttoggle: PropTypes.func,\n\ttemperatureSystem: PropTypes.string\n};\n\nconst mapStateToProps = ({temperatureSystem}) => ({temperatureSystem});\n\nconst mapDispatchToProps = (dispatch) => ({\n\ttoggle: () => dispatch(toggleTemperatureSystem())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConvertTemp);","const TOGGLE_TEMPERATURE_SYSTEM = 'TOGGLE_TEMPERATURE_SYSTEM';\n\nconst toggleTemperatureSystem = () => ({type: TOGGLE_TEMPERATURE_SYSTEM});\n\nconst defaultState = 'F';\n\nconst reducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase TOGGLE_TEMPERATURE_SYSTEM:\n\t\t\treturn state.abbr === 'F' ? 'C' : 'F';\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport { reducer, toggleTemperatureSystem};","import React, { PureComponent } from 'react';\nimport './CurrentWeather.css';\nimport PropTypes from 'prop-types';\nimport ConvertTemp from './ConvertTemp.js';\n\nclass CurrentWeather extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"current-weather\">\n\t\t\t\t{this.props.pending && <div className=\"pending\">Updating...</div>}\n\t\t\t\t{this.props.error && <div className=\"error\">{this.props.error}</div>}\n\t\t\t\t<div className=\"current-weather-icons\">\n\t\t\t\t\t{this.props.currentWeather.weather.map(\n\t\t\t\t\t\t({main, icon}, idx) => \n\t\t\t\t\t\t\t<div key={`weather-icon-${main}-${idx}`}>\n\t\t\t\t\t\t\t\t<img src={`images/weather-icons/svg/${icon}.svg`} alt={main} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"current-weather-temp\">\n\t\t\t\t\t<div className=\"temp-live\">\n\t\t\t\t\t\t<ConvertTemp kelvin={this.props.currentWeather.main.temp} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t// <div className=\"temp-hi-lo\">\n\t\t\t\t\t// \t<div className=\"temp-hi\">\n\t\t\t\t\t// \t\t<span>Hi: </span>\n\t\t\t\t\t// \t\t<ConvertTemp kelvin={this.props.currentWeather.main.temp_max} />\n\t\t\t\t\t// \t</div>\n\t\t\t\t\t// \t<div className=\"temp-lo\">\n\t\t\t\t\t// \t\t<span>Lo: </span>\n\t\t\t\t\t// \t\t<ConvertTemp kelvin={this.props.currentWeather.main.temp_min} />\n\t\t\t\t\t// \t</div>\n\t\t\t\t\t// </div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"current-weather-description\">\n\t\t\t\t\t{this.props.currentWeather.weather.map(({description}) => description).join(', ')}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCurrentWeather.defaultProps = {\n\tcurrentWeather: {\n\t\tweather: [],\n\t\tmain: {}\n\t},\n\tpending: false,\n\terror: undefined\n};\n\nCurrentWeather.propTypes = {\n  currentWeather: PropTypes.object,\n  pending: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default CurrentWeather;","import React, { PureComponent } from 'react';\nimport './ForecastWeather.css';\nimport PropTypes from 'prop-types';\nimport ConvertTemp from './ConvertTemp.js';\n\nclass ForecastWeather extends PureComponent {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.today = new Date().getDay();\n\t}\n\n\tcomponentWillUpdate() {\n\t\tthis.today = new Date().getDay();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"forecast-weather\">\n\t\t\t\t{this.props.pending && <div className=\"pending\">Updating...</div>}\n\t\t\t\t{this.props.error && <div className=\"error\">{this.props.error}</div>}\n\t\t\t\t{this.props.forecastWeather.list.map(\n\t\t\t\t\t({temp, weather}, idx) => {\n\t\t\t\t\t\tconst weekdays = {0: 'Sun', 1: 'Mon', 2: 'Tue', 3: 'Wed', 4: 'Thu', 5: 'Fri', 6: 'Sat'};\n\t\t\t\t\t\tconst day = this.today + idx;\n\t\t\t\t\t\tconst weekday = weekdays[day > 6 ? day - 7 : day];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"forecast-weather-day\" key={`forecast-weather-${idx}`}>\n\t\t\t\t\t\t\t\t<div className=\"forecast-weekday\">{weekday}</div>\n\t\t\t\t\t\t\t\t<div className=\"forecast-temperature\">\n\t\t\t\t\t\t\t\t\t<ConvertTemp kelvin={temp.max} />\n\t\t\t\t\t\t\t\t\t<ConvertTemp kelvin={temp.min} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"forecast-day-icon\">\n\t\t\t\t\t\t\t\t\t{weather.map(\n\t\t\t\t\t\t\t\t\t\t({main, icon}, iconIdx) => \n\t\t\t\t\t\t\t\t\t\t\t<img src={`images/weather-icons/svg/${icon}.svg`} alt={main} key={`forecast-day-${idx}-icon-${iconIdx}`} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"forecast-day-description\">\n\t\t\t\t\t\t\t\t\t{weather.map(({description}) => description).join(', ')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nForecastWeather.defaultProps = {\n\tforecastWeather: {\n\t\tlist: []\n\t},\n\tpending: false,\n\terror: undefined\n};\n\nForecastWeather.propTypes = {\n  forecastWeather: PropTypes.object,\n  pending: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default ForecastWeather;","import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { determineLocation } from './reducers/location.reducer.js';\nimport { getForecasts } from './reducers/weather.reducer.js';\n\nimport LookupLocation from './components/LookupLocation.js';\nimport CurrentWeather from './components/CurrentWeather.js';\nimport ForecastWeather from './components/ForecastWeather.js';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.determineLocation();\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    const { lat, lon } = this.props.location;\n    const { lat:nextLat, lon:nextLon } = nextProps.location;\n    if(nextLat !== lat || nextLon !== lon) {\n      this.props.getForecasts(nextProps.location);\n    }\n  }\n\n  render() {\n    return (\n      <div className={`weather-container ${this.props.sky}-bg`}>\n        <LookupLocation />\n        <div className=\"weather-forecasts\">\n          <CurrentWeather \n            currentWeather={this.props.currentWeather.data} \n            pending={this.props.currentWeather.pending} \n            error={this.props.currentWeather.error}\n          />\n          <ForecastWeather \n            forecastWeather={this.props.forecastWeather.data} \n            pending={this.props.forecastWeather.pending} \n            error={this.props.forecastWeather.error}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({location, weather, sky}) => ({\n  location,\n  currentWeather: weather.currentWeather,\n  forecastWeather: weather.forecastWeather,\n  sky\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  determineLocation: () => dispatch(determineLocation()),\n  getForecasts: (location) => dispatch(getForecasts(location))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer as location } from './location.reducer.js';\nimport { reducer as lookupLocation } from './lookupLocation.reducer.js';\nimport { reducer as temperatureSystem } from './temperatureSystem.reducer.js';\nimport { reducer as weather } from './weather.reducer.js';\nimport { reducer as sky } from './sky.reducer.js';\n\nconst loadStateFromLocalStorage = () => {\n\ttry {\n\t\tconst state = localStorage.getItem('fcc-weather-app');\n\t\treturn state == null ? undefined : JSON.parse(state);\n\t} catch(err) {\n\t\treturn undefined;\n\t}\n};\n\nconst saveStateToLocalStorage = (state) => {\n\ttry {\n\t\tlocalStorage.setItem('fcc-weather-app', JSON.stringify(state));\n\t} catch(err) {\n\t\t// Ignore write errors\n\t}\n};\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === `development`) {\n  const { logger } = require(`redux-logger`);\n\n  middlewares.push(logger);\n}\n\nconst store = createStore(\n\tcombineReducers({\n\t\tlocation, \n\t\tlookupLocation, \n\t\ttemperatureSystem,\n\t\tweather,\n\t\tsky\n\t}), \n\tloadStateFromLocalStorage(),\n\tapplyMiddleware(...middlewares)\n);\n\nstore.subscribe(() => {\n\tconst state = store.getState();\n\tsaveStateToLocalStorage({...state, location: {name: state.location.name}});\n});\n\nexport default store;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './reducers/index.js';\nimport registerServiceWorker from './serviceWorker.js';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\nregisterServiceWorker();"],"sourceRoot":""}