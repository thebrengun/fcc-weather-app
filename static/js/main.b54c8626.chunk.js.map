{"version":3,"sources":["assets/ic_location_on_white_24px.svg","assets/ic_location_on_black_24px.svg","providers/index.js","reducers/location.reducer.js","reducers/weather.reducer.js","reducers/lookupLocation.reducer.js","components/LookupLocation.js","components/ConvertTemp.js","reducers/temperatureSystem.reducer.js","components/CurrentWeather.js","components/ForecastWeather.js","App.js","reducers/sky.reducer.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","endpoint","process","formatRequest","base","options","Object","keys","reduce","s","k","i","getLocationInfo","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","lat","latitude","lon","longitude","locName","concat","loc","Error","fetchWeather","url","_ref3","id","fetch","encodeURIComponent","fetchCurrentWeather","fetchForecast","setLatLon","_ref","type","setLocName","name","getLocationName","locationInfo","then","response","status","json","catch","err","map","key","filter","r","address_components","reverseGeocode","results","formatted_address","getLocation","_ref2","locObj","city","country","postal","_loc$split$map","split","trim","_loc$split$map2","slicedToArray","getBestResult","Array","isArray","selectedResult","length","types","indexOf","slice","defaultState","forecastWeather","list","currentWeather","main","temp","undefined","weather","updateSearchFieldAndLookupSuggestions","searchFieldText","dispatch","getState","updateSearchField","state","lookupLocation","debounceLookupSuggestions","cancel","fn","debounce","q","address","suggestions","maxWait","editingSearchField","searchField","LookupLocation","componentDidUpdate","prevProps","editing","_this","props","focus","_this2","this","react_default","a","createElement","className","sky","onClick","editSearchField","src","locationIconBlk","locationIcon","alt","value","onChange","onBlur","e","setTimeout","blurSearchField","ref","locationName","locationSuggestions","idx","geometry","place_id","selectLocation","location","lng","PureComponent","connect","target","latLon","round","num","places","arguments","mult","Math","pow","kelvinToCelsiusRounded","K","kelvinToCelsius","kelvinToFarenheitRounded","kelvinToFarenheit","ConvertTemp","convert","kelvin","temperatureSystem","toggle","String","fromCharCode","CurrentWeather","pending","error","icon","src_components_ConvertTemp","description","join","defaultProps","ForecastWeather","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","today","Date","getDay","day","weekday","0","1","2","3","4","5","6","max","min","iconIdx","App","componentWillReceiveProps","nextProps","_this$props$location","_nextProps$location","nextLat","nextLon","locationHasChanged","dt","moreThanTenMinutesSinceLastUpdate","now","parseInt","getForecasts","determineLocation","src_components_LookupLocation","src_components_CurrentWeather","data","src_components_ForecastWeather","Component","forecasts","message","sunrise","sunset","sys","clouds","all","payload","setForecastWeather","setForecastWeatherError","middlewares","thunk","store","createStore","combineReducers","action","objectSpread","localStorage","getItem","JSON","parse","loadStateFromLocalStorage","applyMiddleware","apply","subscribe","setItem","stringify","saveStateToLocalStorage","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","es","src_App_0","document","getElementById","URL","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8WCAlCC,EAAWC,qDAQjB,IAAMC,EAAgB,SAACC,EAAMC,GAC3B,OAAOD,EAAOE,OAAOC,KAAKF,GAASG,OAAO,SAACC,EAAGC,EAAGC,GAE/C,OAAOF,GADY,IAANE,EAAU,IAAM,KACTD,EAAI,IAAML,EAAQK,IACrC,KAqCCE,EAAkB,WACtB,OAAO,IAAIC,QACT,SAACC,EAASC,GACL,gBAAiBC,UAClBA,UAAUC,YAAYC,mBACpB,SAAAC,GAAY,IAAAC,EAC8BD,EAASE,OAAhCC,EADPF,EACHG,SAA0BC,EADvBJ,EACYK,UACnBH,GAAOE,EACRV,EAAQ,CACNY,QAAO,GAAAC,OAAKL,EAAL,MAAAK,OAAaH,GACpBI,IAAK,CAACN,MAAKE,SAGbT,EAAO,IAAIc,MAAM,0CAGrBd,GAGFA,EAAO,IAAIc,MAAM,iCAgCnBC,EAAe,SAACC,GAAD,OAAS,SAAAC,GAAoB,IAAlBV,EAAkBU,EAAlBV,IAAKE,EAAaQ,EAAbR,IAAKS,EAAQD,EAARC,GACxC,OAAGA,EACMC,MAAK,GAAAP,OAAII,EAAJ,QAAAJ,OAAcQ,mBAAmBF,KACrCX,GAAOE,EACRU,MAAK,GAAAP,OAAII,EAAJ,SAAAJ,OAAeQ,mBAAmBb,GAAlC,SAAAK,OAA8CQ,mBAAmBX,KAEtEX,QAAQC,QAAQ,IAAIe,MAAM,wDAI/BO,EAAsBN,EAAY,GAAAH,OAAI1B,EAAJ,4BAClCoC,EAAgBP,EAAY,GAAAH,OAAI1B,EAAJ,0BC1G5BqC,EAAY,SAAAC,GAAA,MAAiB,CAACC,KAHhB,cAGmClB,IAArCiB,EAAEjB,IAAwCE,IAA1Ce,EAAOf,MACnBiB,EAAa,SAACC,GAAD,MAAW,CAACF,KAHV,eAG8BE,SAa7CC,EAAkB,SAACC,GACxB,ODYsB,SAAAL,GAAgB,IAAdjB,EAAciB,EAAdjB,IAAKE,EAASe,EAATf,IAC5B,OAAOU,MAAM/B,EAAa,GAAAwB,OAAI1B,EAAJ,0BAAsC,CAACqB,MAAKE,SAAOqB,KAC3E,SAAAC,GACE,GAAGA,EAASC,QAAU,IACpB,MAAM,IAAIlB,MAAM,gBAElB,OAAOiB,EAASE,SAElBC,MACA,SAAAC,GAAQ,MAAMA,IACdL,KACA,SAAAG,GACE,OAAO1C,OAAOC,KAAKyC,GAAMG,IAAI,SAAAC,GAAG,OAAIJ,EAAKI,KAAMC,OAAO,SAACC,GAAD,OAAOA,EAAEC,uBCxB7DC,CAAeZ,EAAahB,KAAKqB,MAAM,SAAAC,GAAG,MAAK,CACrDO,QAAS,CAAC,CACTC,kBAAmBd,EAAalB,QAChC6B,mBAAoB,SAKjBI,EAAc,WAQnB,ODuCQzB,MAAM,0BAA0BW,KACrC,SAAAC,GACE,GAAGA,EAASC,QAAU,IACpB,MAAM,IAAIlB,MAAM,gBAElB,OAAOiB,EAASE,SAElBC,MACA,SAAAC,GAAQ,MAAMA,IACdL,KACA,SAAAe,GAAkC,IAC5BC,EADJC,EAAgCF,EAAhCE,KAAMC,EAA0BH,EAA1BG,QAAiBnC,GAASgC,EAAjBI,OAAiBJ,EAAThC,KAEvB,KAAIA,GAASkC,GAAQC,GACnB,MAAM,IAAIlC,MAAM,2CACX,GAAGD,EAAK,KAAAqC,EACQrC,EAAIsC,MAAM,KAAKf,IAAI,SAAA1C,GAAC,OAAIA,EAAE0D,SADlCC,EAAA9D,OAAA+D,EAAA,EAAA/D,CAAA2D,EAAA,GAEbJ,EAAS,CAACvC,IAFG8C,EAAA,GAEE5C,IAFF4C,EAAA,IAIf,MAAQ,CAAC1C,QAAO,GAAAC,OAAKmC,EAAL,MAAAnC,OAAcoC,GAAWnC,IAAKiC,KAEhDZ,MACA,SAAAC,GAAQ,MAAMA,IC5DID,MAAMrC,GAAiBqC,MAPd,SAACC,GAAD,MAAU,CACvCxB,QAAS,gCACTE,IAAK,CACJN,IAAK,WACLE,KAAM,gBAMH8C,EAAgB,SAACb,GAEtB,IAAIc,MAAMC,QAAQf,GACjB,MAAO,GAER,IAAIgB,EAAiBhB,EAAQJ,OAC5B,SAAAO,GACC,IADyB,IAAxBL,EAAwBK,EAAxBL,mBACO5C,EAAI,EAAGA,EAAI4C,EAAmBmB,OAAQ/D,IAAK,CAClD,IAAMgE,EAAQpB,EAAmB5C,GAAGgE,MACpC,GACCA,EAAMC,QAAQ,sBAAwB,GACtCD,EAAMC,QAAQ,kBAAoB,GAClCD,EAAMC,QAAQ,kBAAoB,GAClCD,EAAMC,QAAQ,UAAa,EAE3B,OAAO,EAGT,OAAO,IAEPC,MAAM,EAAG,GAUX,OAPCJ,EAD4B,IAA1BA,EAAeC,QAAgBjB,EAAQiB,OAAS,EACjCjB,EAAQ,GACU,IAA1BgB,EAAeC,OACP,GAEAD,EAAe,IAM5BK,EAAe,CACpBpC,KAAM,eACNpB,IAAK,UACLE,KAAM,WCxEDsD,EAAe,CACpBC,gBAAiB,CAACC,KAAM,IACxBC,eAAgB,CACfC,KAAM,CAACC,UAAMC,GACbC,QAAS,8BCOLC,EAAwC,SAACC,GAAD,OAAqB,SAACC,EAAUC,GAC7ED,EAJyB,SAACD,GAAD,MAAsB,CAAC/C,KANrB,sBAMgD+C,mBAIlEG,CAAkBH,IAD+D,IAElEI,EAAUF,IAA1BG,eAER,GADGD,EAAME,2BAA6BF,EAAME,0BAA0BC,SACnEP,EAAiB,CACnB,IAGMQ,EAAKC,IAH0B,kBHJfC,EGIoCV,EHHnDrD,MAAM/B,EAAa,GAAAwB,OAAI1B,EAAJ,0BAAsC,CAACiG,QAAS/D,mBAAmB8D,MAAMpD,KACjG,SAAAC,GACE,GAAGA,EAASC,QAAU,IACpB,MAAM,IAAIlB,MAAM,gBAElB,OAAOiB,EAASE,SAElBC,MACA,SAAAC,GAAQ,MAAMA,IACdL,KACA,SAAAG,GACE,OAAO1C,OAAOC,KAAKyC,GAAMG,IAAI,SAAAC,GAAG,OAAIJ,EAAKI,KAAMC,OAAO,SAACC,GAAD,OAAOA,EAAEC,wBGRQV,KAC1E,SAACY,GAAD,OAAa+B,EAR4B,CAAChD,KANlB,qBAM4C2D,YAQ5B1C,MHLpB,IAACwC,GGO4B,IAAK,CAACG,QAAS,MACjEL,IACAP,EAXgC,SAACO,GAAD,MAAS,CAACvD,KANR,8BAM2CuD,MAWpEF,CAA0BE,OAI/BjB,EAAe,CACpBuB,oBAAoB,EACpBC,YAAa,GACbH,YAAa,sCCtBRI,6MAEJC,mBAAqB,SAACC,IACK,IAAtBA,EAAUC,UAA4C,IAAvBC,EAAKC,MAAMF,SAC3CC,EAAKL,YAAYO,iFAIZ,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,wBAAAxF,OAA0BoF,KAAKH,MAAMQ,MACjDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAxF,OAAiBoF,KAAKH,MAAMF,QAAU,WAAa,KAC/DM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,QAASN,KAAKH,MAAMU,iBACjDN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,KAAKH,MAAMF,QAAUc,IAAkBC,IAAcC,IAAI,kBAEpEX,KAAKH,MAAMF,QACVM,EAAAC,EAAAC,cAAA,SACES,MAAOZ,KAAKH,MAAMN,YAClBsB,SAAUb,KAAKH,MAAMlB,kBACrBmC,OAAQ,SAACC,GAAD,OAAOC,WAAWjB,EAAKF,MAAMoB,gBAAiB,KACtDb,UAAU,wBACVc,IAAK,SAACA,GAASnB,EAAKR,YAAc2B,KAEpCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBE,QAASN,KAAKH,MAAMU,iBAClDP,KAAKH,MAAMsB,eAIjBnB,KAAKH,MAAMuB,qBAAuBpB,KAAKH,MAAMuB,oBAAoBzD,OAAS,GACzEsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZJ,KAAKH,MAAMuB,oBAAoBhF,IAC9B,SAAAS,EAA0CwE,GAA1C,IAAE1E,EAAFE,EAAEF,kBAAmB2E,EAArBzE,EAAqByE,SAAUC,EAA/B1E,EAA+B0E,SAA/B,OACEtB,EAAAC,EAAAC,cAAA,OACEG,QAASP,EAAKF,MAAM2B,eAClB7E,EACA,CAACpC,IAAK+G,EAASG,SAASlH,IAAKE,IAAK6G,EAASG,SAASC,MAEtDrF,IAAG,GAAAzB,OAAKyG,EAAL,KAAAzG,OAAY2G,IAEd5E,cAvCUgF,iBA8EdC,cAlBS,SAAA3G,GAAA,IAAEwG,EAAFxG,EAAEwG,SAAU5C,EAAZ5D,EAAY4D,eAAgBwB,EAA5BpF,EAA4BoF,IAA5B,MAAsC,CAC5Dc,aAAcM,EAAS9F,KACvByF,oBAAqBvC,EAAeO,YACpCG,YAAaV,EAAeU,YAC5BI,QAASd,EAAeS,mBACxBe,QAGyB,SAAC5B,GAAD,MAAe,CACxC8B,gBAAiB,SAACQ,GAAD,OAAOtC,EDrEK,CAAChD,KANN,uBC4ExBkD,kBAAmB,SAACoC,GAAD,OAAOtC,EAASF,EAAsCwC,EAAEc,OAAOjB,SAClFK,gBAAiB,kBAAMxC,EDtEM,CAAChD,KANN,uBC6ExB+F,eAAgB,SAAC7F,EAAMmG,GAAP,OAAkB,SAACf,GACjCtC,EAAS/C,EAAWC,IACpB8C,EAASlD,EAAUuG,QAIRF,CAA6CpC,GCjFtDuC,eAAQ,SAACC,GAAoB,IAAfC,EAAeC,UAAAvE,OAAA,QAAAU,IAAA6D,UAAA,GAAAA,UAAA,GAAN,EACrBC,EAAOC,KAAKC,IAAI,GAAIJ,GAC1B,OAAOG,KAAKL,MAAMC,EAAMG,GAAQA,IAE5BG,EAAyB,SAAAC,GAAC,OAAIR,EAAMS,EAAgBD,KACpDE,EAA2B,SAAAF,GAAC,OAAIR,EAAMW,EAAkBH,KACxDG,EAAoB,SAACtE,GAAD,OAAc,IAAJA,EAAiB,QAC/CoE,EAAkB,SAACpE,GAAD,OAAUA,EAAO,QAEnCuE,6MACLC,QAAU,SAACC,GACV,MAAwC,MAAjCjD,EAAKC,MAAMiD,kBACjBL,EAAyBI,GACzBP,EAAuBO,4EAIxB,OACC5C,EAAAC,EAAAC,cAAA,QAAMG,QAASN,KAAKH,MAAMkD,OAAQ3C,UAAU,QAC3CH,EAAAC,EAAAC,cAAA,YAAOH,KAAKH,MAAMgD,OAAS7C,KAAK4C,QAAQ5C,KAAKH,MAAMgD,QAAU,MAC7D5C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACd4C,OAAOC,aAAa,KAAMjD,KAAKH,MAAMiD,2BAZjBnB,iBAgCXC,cANS,SAAApG,GAAA,MAA0B,CAACsH,kBAA3BtH,EAAEsH,oBAEC,SAACrE,GAAD,MAAe,CACzCsE,OAAQ,kBAAMtE,EC1CwB,CAAChD,KAFN,iCD+CnBmG,CAA6Ce,GE1CtDO,mLAEJ,OACCjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbJ,KAAKH,MAAMsD,SAAWlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,eACtBJ,KAAKH,MAAMuD,OAASnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,KAAKH,MAAMuD,OACxDnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbJ,KAAKH,MAAM3B,eAAeI,QAAQlC,IAClC,SAAAZ,EAAe6F,GAAf,IAAElD,EAAF3C,EAAE2C,KAAMkF,EAAR7H,EAAQ6H,KAAR,OACCpD,EAAAC,EAAAC,cAAA,OAAK9D,IAAG,gBAAAzB,OAAkBuD,EAAlB,KAAAvD,OAA0ByG,IACjCpB,EAAAC,EAAAC,cAAA,OAAKK,IAAG,4BAAA5F,OAA8ByI,EAA9B,QAA0C1C,IAAKxC,QAI3D8B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAACmD,EAAD,CAAaT,OAAQ7C,KAAKH,MAAM3B,eAAeC,KAAKC,SAetD6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbJ,KAAKH,MAAM3B,eAAeI,QAAQlC,IAAI,SAAAS,GAAA,OAAAA,EAAE0G,cAA8BC,KAAK,eAhCpD7B,iBAuC7BuB,EAAeO,aAAe,CAC7BvF,eAAgB,CACfI,QAAS,GACTH,KAAM,IAEPgF,SAAS,EACTC,WAAO/E,GASO6E,QCtDTQ,qBACL,SAAAA,IAAc,IAAA9D,EAAA,OAAArG,OAAAoK,EAAA,EAAApK,CAAAyG,KAAA0D,IACb9D,EAAArG,OAAAqK,EAAA,EAAArK,CAAAyG,KAAAzG,OAAAsK,EAAA,EAAAtK,CAAAmK,GAAAI,KAAA9D,QACK+D,OAAQ,IAAIC,MAAOC,SAFXrE,qFAMbI,KAAK+D,OAAQ,IAAIC,MAAOC,0CAGhB,IAAAlE,EAAAC,KACR,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbJ,KAAKH,MAAMsD,SAAWlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,eACtBJ,KAAKH,MAAMuD,OAASnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,KAAKH,MAAMuD,OACvDpD,KAAKH,MAAM7B,gBAAgBC,MAAQ+B,KAAKH,MAAM7B,gBAAgBC,KAAK7B,IACnE,SAAAZ,EAAkB6F,GAAQ,IAAxBjD,EAAwB5C,EAAxB4C,KAAME,EAAkB9C,EAAlB8C,QAED4F,EAAMnE,EAAKgE,MAAQ1C,EACnB8C,EAFW,CAACC,EAAG,MAAOC,EAAG,MAAOC,EAAG,MAAOC,EAAG,MAAOC,EAAG,MAAOC,EAAG,MAAOC,EAAG,OAExDR,EAAM,EAAIA,EAAM,EAAIA,GAC7C,OACCjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuB/D,IAAG,oBAAAzB,OAAsByG,IAC9DpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB+D,GACnClE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACdH,EAAAC,EAAAC,cAACmD,EAAD,CAAaT,OAAQzE,EAAKuG,MAC1B1E,EAAAC,EAAAC,cAACmD,EAAD,CAAaT,OAAQzE,EAAKwG,OAE3B3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACb9B,EAAQlC,IACR,SAAAS,EAAegI,GAAf,IAAE1G,EAAFtB,EAAEsB,KAAMkF,EAARxG,EAAQwG,KAAR,OACCpD,EAAAC,EAAAC,cAAA,OAAKK,IAAG,4BAAA5F,OAA8ByI,EAA9B,QAA0C1C,IAAKxC,EAAM9B,IAAG,gBAAAzB,OAAkByG,EAAlB,UAAAzG,OAA8BiK,QAGjG5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACb9B,EAAQlC,IAAI,SAAAnB,GAAA,OAAAA,EAAEsI,cAA8BC,KAAK,kBAlC7B7B,kBA6C9B+B,EAAgBD,aAAe,CAC9BzF,gBAAiB,CAChBC,KAAM,IAEPkF,SAAS,EACTC,WAAO/E,GASOqF,QCtDToB,6MAKJC,0BAA4B,SAACC,GAAc,IAAAC,EACpBrF,EAAKC,MAAM4B,SAAxBlH,EADiC0K,EACjC1K,IAAKE,EAD4BwK,EAC5BxK,IAD4ByK,EAEJF,EAAUvD,SAAnC0D,EAF6BD,EAEjC3K,IAAiB6K,EAFgBF,EAEpBzK,IACf4K,EAAqBF,IAAY5K,GAAO6K,IAAY3K,EAGpD6K,EADiBN,EAAU9G,eACPoH,GAEpBC,EAAqCvB,KAAKwB,MAD7B,IACmDC,SAASH,EAAI,KAEhFD,GAAsBE,IACvB3F,EAAKC,MAAM6F,aAAaV,EAAUvD,8FAdpCzB,KAAKH,MAAM8F,qDAmBX,OACE1F,EAAAC,EAAAC,cAAA,OAAKC,UAAS,qBAAAxF,OAAuBoF,KAAKH,MAAMQ,IAAlC,QACZJ,EAAAC,EAAAC,cAACyF,EAAD,MACA3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAC0F,EAAD,CACE3H,eAAgB8B,KAAKH,MAAM3B,eAAe4H,KAC1C3C,QAASnD,KAAKH,MAAM3B,eAAeiF,QACnCC,MAAOpD,KAAKH,MAAM3B,eAAekF,QAEnCnD,EAAAC,EAAAC,cAAC4F,EAAD,CACE/H,gBAAiBgC,KAAKH,MAAM7B,gBAAgB8H,KAC5C3C,QAASnD,KAAKH,MAAM7B,gBAAgBmF,QACpCC,MAAOpD,KAAKH,MAAM7B,gBAAgBoF,iBAjC5B4C,aAqDHpE,cAZS,SAAApG,GAAA,IAAEiG,EAAFjG,EAAEiG,SAAUnD,EAAZ9C,EAAY8C,QAAS+B,EAArB7E,EAAqB6E,IAArB,MAA+B,CACrDoB,WACAvD,eAAgBI,EAAQJ,eACxBF,gBAAiBM,EAAQN,gBACzBqC,QAGyB,SAAC5B,GAAD,MAAe,CACxCkH,kBAAmB,kBAAMlH,ERpDK,SAACA,EAAUC,GAC1CD,EAAS/C,EAAW,yBACpBkB,IAAcd,KACb,SAACD,GACA4C,EAASlD,EAAUM,EAAahB,MAChCe,EAAgBC,GAAcC,KAC7B,SAACY,GAAD,OAAa+B,EAAS/C,EAAW6B,EAAcb,GAASC,mBAAqB,YQ+C/E+I,aAAc,SAACjE,GAAD,OAAchD,EPjCT,SAAAjD,GAAA,IAAEjB,EAAFiB,EAAEjB,IAAKE,EAAPe,EAAOf,IAAP,OAAgB,SAACgE,EAAUC,GAC/C,IAAMuH,EAAY,GAClBxH,EAPuC,CAAChD,KARX,0BAgB7BJ,EAAoB,CAACd,MAAKE,QAAMqB,KAC/B,SAAAC,GACC,OAAGA,EAASC,QAAU,IACdD,EAASE,OAAOH,KAAK,SAAAe,GAAe,IAAbqJ,EAAarJ,EAAbqJ,QAC7B,MAAM,IAAIpL,MAAMoL,KAGXnK,EAASE,SAEhBH,KACD,SAACoC,GAGA,OAFA+H,EAAS,eAAqB/H,EAC9BO,EAnBsC,CAAChD,KARX,2BA4BrBH,EAAc,CAACJ,GAAIgD,EAAehD,MAE1C,SAAAiB,GAEC,OADA8J,EAAS,eAAqB9J,EACvB8J,IAEPnK,KACD,SAAAC,GACC,OAAGA,EAASC,QAAU,IACdD,EAASE,OAAOH,KAAK,SAAAb,GAAe,IAAbiL,EAAajL,EAAbiL,QAC7B,MAAM,IAAIpL,MAAMoL,KAGXnK,EAASE,SAEhBH,KACD,SAACkC,GAEA,OADAiI,EAAS,gBAAsBjI,EACxBiI,GAER,SAAA9J,GAEC,OADA8J,EAAS,gBAAsB9J,EACxB8J,IAEPnK,KACD,SAACmK,GA5C4B,IQtBfX,EAAIa,EAASC,ERmEvBH,EAAU/H,gBAAkB+H,EAAU/H,0BAA0BpD,SAAU,GAC5E2D,GQpEY6G,ERqEXW,EAAU/H,eAAeoH,GQrEVa,ERsEfF,EAAU/H,eAAemI,IAAIF,QQtELC,ERuExBH,EAAU/H,eAAemI,IAAID,OAC7BH,EAAU/H,eAAeoI,OAAOC,IQxEY,CAChD9K,KAHe,UAIf4E,IAAKiF,GAAMa,GAAWb,GAAMc,EAAS,MAAQ,WRwE1C3H,EAxDoC,CAAChD,KATb,sBASwC+K,QAwDrCP,EAAU/H,kBAErCO,EAtDqC,CAAChD,KAPR,4BAOyC+K,QAsDvC,kCAAoCP,EAAU/H,eAAegI,UAG3FD,EAAUjI,iBAAmBiI,EAAUjI,2BAA2BlD,SAAU,EAC9E2D,EA7DuB,SAACH,GAAD,MAAc,CAAC7C,KATb,uBASyC+K,QAASlI,GA6DlEmI,CAAmBR,EAAUjI,kBAEtCS,EA3D4B,SAACtC,GAAD,MAAU,CAACV,KAPR,6BAO0C+K,QAASrK,GA2DzEuK,CAAwB,2BAA6BT,EAAUjI,gBAAgBkI,aOxBrDR,CAAajE,OAGrCG,CAA6CkD,kBEtCtD6B,EAAc,CAACC,KAQfC,GAAQC,YACbC,YAAgB,CACftF,SV2Cc,WAAkC,IAAjC7C,EAAiCsD,UAAAvE,OAAA,QAAAU,IAAA6D,UAAA,GAAAA,UAAA,GAAzBnE,EAAciJ,EAAW9E,UAAAvE,OAAA,EAAAuE,UAAA,QAAA7D,EACjD,OAAO2I,EAAOvL,MACb,IA7EmB,eA8ElB,OAAOlC,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBjD,KAAMqL,EAAOrL,OAChC,IAhFkB,cAiFjB,OAAOpC,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBrE,IAAKyM,EAAOzM,IAAKE,IAAKuM,EAAOvM,MAChD,QACC,OAAOmE,IUjDRC,eRFc,WAAkC,IAAjCD,EAAiCsD,UAAAvE,OAAA,QAAAU,IAAA6D,UAAA,GAAAA,UAAA,GAAzBnE,EAAciJ,EAAW9E,UAAAvE,OAAA,EAAAuE,UAAA,QAAA7D,EACjD,OAAO2I,EAAOvL,MACb,IA7BkC,8BA8BjC,OAAOlC,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBE,0BAA2BkI,EAAOhI,KACrD,IAhCyB,qBAkCxB,OAAOzF,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBQ,YAAaR,EAAMU,mBAAqB0H,EAAO5H,YAAc,KAChF,IApC0B,sBAqCzB,OAAO7F,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBW,YAAayH,EAAOxI,kBACvC,IAxCwB,oBAyCvB,OAAOjF,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBU,oBAAoB,IACvC,IAzCwB,oBA6CvB,OAHGV,EAAME,2BACRF,EAAME,0BAA0BC,SAE1BxF,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBU,oBAAoB,EAAOC,YAAa,GAAIH,YAAa,KAC5E,QACC,OAAOR,IQdRkE,kBL/Bc,WAAkC,IAAjClE,EAAiCsD,UAAAvE,OAAA,QAAAU,IAAA6D,UAAA,GAAAA,UAAA,GAF7B,IAGpB,QADiDA,UAAAvE,OAAA,EAAAuE,UAAA,QAAA7D,GACnC5C,MACb,IARgC,4BAS/B,MAAiB,MAAVmD,EAAgB,IAAM,IAC9B,QACC,OAAOA,IK2BRN,QToDc,WAAkC,IAAjCM,EAAiCsD,UAAAvE,OAAA,QAAAU,IAAA6D,UAAA,GAAAA,UAAA,GAAzBnE,EAAciJ,EAAW9E,UAAAvE,OAAA,EAAAuE,UAAA,QAAA7D,EACjD,OAAO2I,EAAOvL,MACb,IA9E4B,wBA+E3B,OAAOlC,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBV,eAAe3E,OAAA0N,EAAA,EAAA1N,CAAA,GAAKqF,EAAMV,eAAZ,CAA4BiF,SAAS,EAAMC,WAAO/E,EAAWiH,GAAItB,KAAKwB,UACvG,IA/E6B,yBAgF5B,OAAOjM,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBZ,gBAAgBzE,OAAA0N,EAAA,EAAA1N,CAAA,GAAKqF,EAAMZ,gBAAZ,CAA6BmF,SAAS,EAAMC,WAAO/E,MACrF,IA/EgC,4BAgF/B,OAAO9E,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBV,eAAe3E,OAAA0N,EAAA,EAAA1N,CAAA,GAAKqF,EAAMV,eAAZ,CAA4BiF,SAAS,EAAOC,MAAO4D,EAAOR,YAC3F,IAhFiC,6BAiFhC,OAAOjN,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBZ,gBAAgBzE,OAAA0N,EAAA,EAAA1N,CAAA,GAAKqF,EAAMZ,gBAAZ,CAA6BmF,SAAS,EAAOC,MAAO4D,EAAOR,YAC7F,IAzF0B,sBA0FzB,OAAOjN,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBV,eAAgB,CAAC4H,KAAMkB,EAAOR,QAASrD,SAAS,EAAOC,WAAO/E,KACjF,IA1F2B,uBA2F1B,OAAO9E,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAX,CAAkBZ,gBAAiB,CAAC8H,KAAMkB,EAAOR,QAASrD,SAAS,EAAOC,WAAO/E,KAClF,QACC,OAAOO,ISlERyB,IDhCc,WAA0B,IAAzBzB,EAAyBsD,UAAAvE,OAAA,QAAAU,IAAA6D,UAAA,GAAAA,UAAA,GAAjB,KAAM8E,EAAW9E,UAAAvE,OAAA,EAAAuE,UAAA,QAAA7D,EACzC,OAAO2I,EAAOvL,MACb,IATc,UAUb,OAAOuL,EAAO3G,IACf,QACC,OAAOzB,MCJwB,WACjC,IACC,IAAMA,EAAQsI,aAAaC,QAAQ,mBACnC,OAAgB,MAATvI,OAAgBP,EAAY+I,KAAKC,MAAMzI,GAC7C,MAAMzC,GACP,QA4BDmL,GACAC,IAAeC,WAAf,EAAmBb,IAGpBE,GAAMY,UAAU,WACf,IAAM7I,EAAQiI,GAAMnI,YA7BW,SAACE,GAChC,IACCsI,aAAaQ,QAAQ,kBAAmBN,KAAKO,UAAU/I,IACtD,MAAMzC,KA2BRyL,CAAwBrO,OAAA0N,EAAA,EAAA1N,CAAA,GAAIqF,EAAL,CAAY6C,SAAU,CAAC9F,KAAMiD,EAAM6C,SAAS9F,WAGrDkL,UCxCTgB,GAAcC,QACW,cAA7BC,OAAOtG,SAASuG,UAEe,UAA7BD,OAAOtG,SAASuG,UAEhBD,OAAOtG,SAASuG,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBlO,UAAUmO,cACPC,SAASF,GACTrM,KAAK,SAAAwM,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5J,QACf3E,UAAUmO,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB3M,MAAM,SAAAkH,GACLwF,QAAQxF,MAAM,4CAA6CA,KC9DjE0F,IAASC,OACR9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAUnC,MAAOA,IAChB5G,EAAAC,EAAAC,cAAC8I,EAAD,OAEDC,SAASC,eAAe,SDQV,WACb,GAA6C,kBAAmBlP,UAAW,CAGzE,GADkB,IAAImP,IAAIjQ,mBAAwB4O,OAAOtG,UAC3C4H,SAAWtB,OAAOtG,SAAS4H,OAIvC,OAGFtB,OAAOuB,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAvN,OAAMzB,mBAAN,sBAEN0O,GAwCX,SAAiCM,GAE/BhN,MAAMgN,GACHrM,KAAK,SAAAC,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASwN,QAAQC,IAAI,gBAAgB3L,QAAQ,cAG7C5D,UAAUmO,cAAcqB,MAAM3N,KAAK,SAAAwM,GACjCA,EAAaoB,aAAa5N,KAAK,WAC7BiM,OAAOtG,SAASkI,aAKpBzB,GAAgBC,KAGnBjM,MAAM,WACL0M,QAAQC,IACN,mEAzDAe,CAAwBzB,GAHxBD,GAAgBC,MCtBxB0B","file":"static/js/main.b54c8626.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ic_location_on_white_24px.9106449c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_location_on_black_24px.4489927c.svg\";","const endpoint = process.env.REACT_APP_API_ENDPOINT;\n\nif(!endpoint) {\n  throw new Error(`Expected environment variable API_ENDPOINT setting the root for API requests. \n    This assumes a development or production deployment of the \n    fcc-weather-app-api (https://github.com/thebrengun/fcc-weather-app-api).`);\n}\n\nconst formatRequest = (base, options) => {\n  return base + Object.keys(options).reduce((s, k, i) => {\n    let prefix = i === 0 ? '?' : '&';\n    return s + prefix + k + '=' + options[k];\n  }, '');\n};\n\nconst getGeocodeInfo = (q) => {\n  return fetch(formatRequest(`${endpoint}/api/v1/geocode/encode`, {address: encodeURIComponent(q)})).then(\n    response => {\n      if(response.status >= 400) {\n        throw new Error('Bad response');\n      }\n      return response.json();\n    }\n  ).catch(\n    err => {throw err;}\n  ).then(\n    json => {\n      return Object.keys(json).map(key => json[key]).filter((r) => r.address_components);\n    }\n  );\n};\n\nconst reverseGeocode = ({lat, lon}) => {\n  return fetch(formatRequest(`${endpoint}/api/v1/geocode/decode`, {lat, lon})).then(\n    response => {\n      if(response.status >= 400) {\n        throw new Error('Bad response');\n      }\n      return response.json();\n    }\n  ).catch(\n    err => {throw err;}\n  ).then(\n    json => {\n      return Object.keys(json).map(key => json[key]).filter((r) => r.address_components);\n    }\n  );\n};\n\nconst getLocationInfo = () => {\n  return new Promise(\n    (resolve, reject) => {\n      if(\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          position => {\n            const {latitude: lat, longitude: lon} = position.coords;\n            if(lat && lon) {\n              resolve({\n                locName: `${lat}, ${lon}`,\n                loc: {lat, lon}\n              });\n            } else {\n              reject(new Error('Could not get latitude and longitude'));\n            }\n          }, \n          reject\n        );\n      } else {\n        reject(new Error('Geolocation not available'));\n      }\n    }\n  );\n};\n\nconst fetchIPInfo = () => {\n  return fetch('https://ipinfo.io/json').then(\n    response => {\n      if(response.status >= 400) {\n        throw new Error('Bad response');\n      }\n      return response.json()\n    }\n  ).catch(\n    err => {throw err;}\n  ).then(\n    ({city, country, postal, loc}) => {\n      let locObj;\n      if(!loc && !(city && country)) {\n        throw new Error('Unable to get location from IP address.');\n      } else if(loc) {\n        const [ lat, lon ] = loc.split(',').map(s => s.trim());\n        locObj = {lat, lon};\n      }\n      return ({locName: `${city}, ${country}`, loc: locObj});\n    }\n  ).catch(\n    err => {throw err;}\n  );\n};\n\nconst fetchWeather = (url) => ({lat, lon, id}) => {\n  if(id) {\n    return fetch(`${url}?id=${encodeURIComponent(id)}`);\n  } else if(lat && lon) {\n    return fetch(`${url}?lat=${encodeURIComponent(lat)}&lon=${encodeURIComponent(lon)}`);\n  } else {\n    return Promise.resolve(new Error('Must include either id or lat and lon parameters.'));\n  }\n};\n\nconst fetchCurrentWeather = fetchWeather(`${endpoint}/api/v1/weather/current`);\nconst fetchForecast = fetchWeather(`${endpoint}/api/v1/weather/daily`);\n\nexport { fetchCurrentWeather, fetchForecast, fetchIPInfo, getGeocodeInfo, getLocationInfo, reverseGeocode };","import { fetchIPInfo, getLocationInfo, reverseGeocode } from '../providers/index.js';\n\nconst SET_LAT_LON = 'SET_LAT_LON';\nconst SET_LOC_NAME = 'SET_LOC_NAME';\n\nconst setLatLon = ({lat, lon}) => ({type: SET_LAT_LON, lat, lon});\nconst setLocName = (name) => ({type: SET_LOC_NAME, name});\nconst determineLocation = () => (dispatch, getState) => {\n\tdispatch(setLocName('Fetching location...'));\n\tgetLocation().then(\n\t\t(locationInfo) => {\n\t\t\tdispatch(setLatLon(locationInfo.loc));\n\t\t\tgetLocationName(locationInfo).then(\n\t\t\t\t(results) => dispatch(setLocName(getBestResult(results).formatted_address || ''))\n\t\t\t);\n\t\t}\n\t);\n};\n\nconst getLocationName = (locationInfo) => {\n\treturn reverseGeocode(locationInfo.loc).catch(err => ({\n\t\tresults: [{\n\t\t\tformatted_address: locationInfo.locName,\n\t\t\taddress_components: []\n\t\t}]\n\t}));\n};\n\nconst getLocation = () => {\n\tconst returnDefaultLocation = (err) => ({\n\t\tlocName: \"Hell's Kitchen, New York City\",\n\t\tloc: {\n\t\t\tlat: 40.7630299,\n\t\t\tlon: -73.9950965\n\t\t}\n\t});\n\treturn fetchIPInfo().catch(getLocationInfo).catch(returnDefaultLocation);\n};\n\nconst getBestResult = (results) => {\n\t// Selected result should be the first result that doesn't contain point_of_interest, establishment, street_number, or route\n\tif(!Array.isArray(results)) {\n\t\treturn [];\n\t}\n\tlet selectedResult = results.filter(\n\t\t({address_components}) => {\n\t\t\tfor(let i = 0; i < address_components.length; i++) {\n\t\t\t\tconst types = address_components[i].types;\n\t\t\t\tif(\n\t\t\t\t\ttypes.indexOf('point_of_interest') > -1 || \n\t\t\t\t\ttypes.indexOf('establishment') > -1 || \n\t\t\t\t\ttypes.indexOf('street_number') > -1 || \n\t\t\t\t\ttypes.indexOf('route')  > -1\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t).slice(0, 1);\n\n\tif(selectedResult.length === 0 && results.length > 0) {\n\t\tselectedResult = results[0];\n\t} else if(selectedResult.length === 0) {\n\t\tselectedResult = {};\n\t} else {\n\t\tselectedResult = selectedResult[0];\n\t}\n\n\treturn selectedResult;\n};\n\nconst defaultState = {\n\tname: 'New York, NY',\n\tlat: 40.712775,\n\tlon: -74.005973\n};\n\nconst reducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase SET_LOC_NAME:\n\t\t\treturn {...state, name: action.name};\n\t\tcase SET_LAT_LON:\n\t\t\treturn {...state, lat: action.lat, lon: action.lon};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport { reducer, setLatLon, setLocName, determineLocation };","import { fetchCurrentWeather, fetchForecast } from '../providers/index.js';\nimport { setSky } from './sky.reducer.js';\n\nconst defaultState = {\n\tforecastWeather: {list: []},\n\tcurrentWeather: {\n\t\tmain: {temp: undefined},\n\t\tweather: []\n\t}\n};\n\nconst SET_CURRENT_WEATHER = 'SET_CURRENT_WEATHER';\nconst SET_FORECAST_WEATHER = 'SET_FORECAST_WEATHER';\n\nconst FETCH_CURRENT_WEATHER = 'FETCH_CURRENT_WEATHER';\nconst FETCH_FORECAST_WEATHER = 'FETCH_FORECAST_WEATHER';\n\nconst SET_CURRENT_WEATHER_ERROR = 'SET_CURRENT_WEATHER_ERROR';\nconst SET_FORECAST_WEATHER_ERROR = 'SET_FORECAST_WEATHER_ERROR';\n\nconst setCurrentWeather = (weather) => ({type: SET_CURRENT_WEATHER, payload: weather});\nconst setForecastWeather = (weather) => ({type: SET_FORECAST_WEATHER, payload: weather});\nconst setPendingCurrentWeather = () => ({type: FETCH_CURRENT_WEATHER});\nconst setPendingForecastWeather = () => ({type: FETCH_FORECAST_WEATHER});\nconst setCurrentWeatherError = (err) => ({type: SET_CURRENT_WEATHER_ERROR, payload: err});\nconst setForecastWeatherError = (err) => ({type: SET_FORECAST_WEATHER_ERROR, payload: err});\n\nconst getForecasts = ({lat, lon}) => (dispatch, getState) => {\n\tconst forecasts = {};\n\tdispatch(setPendingCurrentWeather());\n\tfetchCurrentWeather({lat, lon}).then(\n\t\tresponse => {\n\t\t\tif(response.status >= 400) {\n\t\t\t\treturn response.json().then(({message}) => {\n\t\t\t\t\tthrow new Error(message);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response.json();\n\t\t}\n\t).then(\n\t\t(currentWeather) => {\n\t\t\tforecasts['currentWeather'] = currentWeather;\n\t\t\tdispatch(setPendingForecastWeather());\n\t\t\treturn fetchForecast({id: currentWeather.id});\n\t\t},\n\t\terr => {\n\t\t\tforecasts['currentWeather'] = err;\n\t\t\treturn forecasts;\n\t\t}\n\t).then(\n\t\tresponse => {\n\t\t\tif(response.status >= 400) {\n\t\t\t\treturn response.json().then(({message}) => {\n\t\t\t\t\tthrow new Error(message);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response.json();\n\t\t}\n\t).then(\n\t\t(forecastWeather) => {\n\t\t\tforecasts['forecastWeather'] = forecastWeather;\n\t\t\treturn forecasts;\n\t\t},\n\t\terr => {\n\t\t\tforecasts['forecastWeather'] = err;\n\t\t\treturn forecasts;\n\t\t}\n\t).then(\n\t\t(forecasts) => {\n\t\t\tif(forecasts.currentWeather && forecasts.currentWeather instanceof Error === false) {\n\t\t\t\tdispatch(setSky(\n\t\t\t\t\tforecasts.currentWeather.dt, \n\t\t\t\t\tforecasts.currentWeather.sys.sunrise, \n\t\t\t\t\tforecasts.currentWeather.sys.sunset, \n\t\t\t\t\tforecasts.currentWeather.clouds.all\n\t\t\t\t));\n\t\t\t\tdispatch(setCurrentWeather(forecasts.currentWeather));\n\t\t\t} else {\n\t\t\t\tdispatch(setCurrentWeatherError('Could not get current weather: ' + forecasts.currentWeather.message));\n\t\t\t}\n\t\t\t\n\t\t\tif(forecasts.forecastWeather && forecasts.forecastWeather instanceof Error === false) {\n\t\t\t\tdispatch(setForecastWeather(forecasts.forecastWeather));\n\t\t\t} else {\n\t\t\t\tdispatch(setForecastWeatherError('Could not get forecast: ' + forecasts.forecastWeather.message));\n\t\t\t}\n\t\t}\n\t);\n};\n\nconst reducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase FETCH_CURRENT_WEATHER:\n\t\t\treturn {...state, currentWeather: {...state.currentWeather, pending: true, error: undefined, dt: Date.now()}};\n\t\tcase FETCH_FORECAST_WEATHER:\n\t\t\treturn {...state, forecastWeather: {...state.forecastWeather, pending: true, error: undefined}};\n\t\tcase SET_CURRENT_WEATHER_ERROR:\n\t\t\treturn {...state, currentWeather: {...state.currentWeather, pending: false, error: action.payload}};\n\t\tcase SET_FORECAST_WEATHER_ERROR:\n\t\t\treturn {...state, forecastWeather: {...state.forecastWeather, pending: false, error: action.payload}};\n\t\tcase SET_CURRENT_WEATHER:\n\t\t\treturn {...state, currentWeather: {data: action.payload, pending: false, error: undefined}};\n\t\tcase SET_FORECAST_WEATHER:\n\t\t\treturn {...state, forecastWeather: {data: action.payload, pending: false, error: undefined}};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport { reducer, getForecasts };","import debounce from 'lodash/debounce';\nimport { getGeocodeInfo } from '../providers/index.js';\n\nconst EDIT_SEARCH_FIELD = 'EDIT_SEARCH_FIELD';\nconst BLUR_SEARCH_FIELD = 'BLUR_SEARCH_FIELD';\nconst UPDATE_SEARCH_FIELD = 'UPDATE_SEARCH_FIELD';\nconst UPDATE_SUGGESTIONS = 'UPDATE_SUGGESTIONS';\nconst DEBOUNCE_LOOKUP_SUGGESTIONS = 'DEBOUNCE_LOOKUP_SUGGESTIONS';\n\nconst editSearchField = () => ({type: EDIT_SEARCH_FIELD});\nconst blurSearchField = () => ({type: BLUR_SEARCH_FIELD});\nconst updateSearchField = (searchFieldText) => ({type: UPDATE_SEARCH_FIELD, searchFieldText});\nconst updateSuggestions = (suggestions) => ({type: UPDATE_SUGGESTIONS, suggestions});\nconst debounceLookupSuggestions = (fn) => ({type: DEBOUNCE_LOOKUP_SUGGESTIONS, fn});\nconst updateSearchFieldAndLookupSuggestions = (searchFieldText) => (dispatch, getState) => {\n\tdispatch(updateSearchField(searchFieldText));\n\tconst { lookupLocation: state } = getState();\n\tif(state.debounceLookupSuggestions) { state.debounceLookupSuggestions.cancel(); }\n\tif(searchFieldText) {\n\t\tconst debouncedLookupSuggestionsFn = () => getGeocodeInfo(searchFieldText).then(\n\t\t\t(results) => dispatch(updateSuggestions(results))\n\t\t);\n\t\tconst fn = debounce(debouncedLookupSuggestionsFn, 600, {maxWait: 1000});\n\t\tfn();\n\t\tdispatch(debounceLookupSuggestions(fn));\n\t}\n};\n\nconst defaultState = {\n\teditingSearchField: false,\n\tsearchField: '',\n\tsuggestions: []\n};\n\nconst reducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase DEBOUNCE_LOOKUP_SUGGESTIONS:\n\t\t\treturn {...state, debounceLookupSuggestions: action.fn};\n\t\tcase UPDATE_SUGGESTIONS:\n\t\t\t// Don't update suggestions if not actively editing the location\n\t\t\treturn {...state, suggestions: state.editingSearchField ? action.suggestions : []};\n\t\tcase UPDATE_SEARCH_FIELD:\n\t\t\treturn {...state, searchField: action.searchFieldText};\n\t\tcase EDIT_SEARCH_FIELD:\n\t\t\treturn {...state, editingSearchField: true};\n\t\tcase BLUR_SEARCH_FIELD:\n\t\t\tif(state.debounceLookupSuggestions) {\n\t\t\t\tstate.debounceLookupSuggestions.cancel();\n\t\t\t}\n\t\t\treturn {...state, editingSearchField: false, searchField: '', suggestions: []};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport { reducer, editSearchField, blurSearchField, updateSearchFieldAndLookupSuggestions, updateSuggestions };","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './LookupLocation.css';\nimport { connect } from 'react-redux';\nimport { editSearchField, blurSearchField, updateSearchFieldAndLookupSuggestions } from '../reducers/lookupLocation.reducer.js';\nimport { setLatLon, setLocName } from '../reducers/location.reducer.js';\nimport locationIcon from '../assets/ic_location_on_white_24px.svg';\nimport locationIconBlk from '../assets/ic_location_on_black_24px.svg';\n\nclass LookupLocation extends PureComponent {\n\n  componentDidUpdate = (prevProps) => {\n    if(prevProps.editing === false && this.props.editing === true) {\n      this.searchField.focus();\n    }\n  }\n\n  render() {\n    return (\n      <div className={`location-box-wrapper ${this.props.sky}`}>\n        <div className={`location-box${this.props.editing ? ' editing' : ''}`}>\n          <div className=\"location-icon\" onClick={this.props.editSearchField}>\n            <img src={this.props.editing ? locationIconBlk : locationIcon} alt=\"Location Pin\" />\n          </div>\n          {this.props.editing ? \n            <input \n              value={this.props.searchField} \n              onChange={this.props.updateSearchField} \n              onBlur={(e) => setTimeout(this.props.blurSearchField, 50)} \n              className=\"location-search-field\" \n              ref={(ref) => {this.searchField = ref;}}\n            /> :\n            <div className=\"location-string\" onClick={this.props.editSearchField}>\n              {this.props.locationName}\n            </div>\n          }\n        </div>\n        {this.props.locationSuggestions && this.props.locationSuggestions.length > 0 && \n          <div className=\"location-suggestions\">\n            {this.props.locationSuggestions.map(\n              ({formatted_address, geometry, place_id}, idx) => \n                <div \n                  onClick={this.props.selectLocation(\n                    formatted_address, \n                    {lat: geometry.location.lat, lon: geometry.location.lng}\n                  )} \n                  key={`${idx}-${place_id}`}\n                >\n                  {formatted_address}\n                </div>\n            )}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nLookupLocation.propTypes = {\n  editing: PropTypes.bool,\n  editSearchField: PropTypes.func,\n  searchField: PropTypes.string,\n  updateSearchField: PropTypes.func,\n  blurSearchField: PropTypes.func,\n  locationName: PropTypes.string,\n  locationSuggestions: PropTypes.array,\n  selectLocation: PropTypes.func\n};\n\nconst mapStateToProps = ({location, lookupLocation, sky}) => ({\n  locationName: location.name,\n  locationSuggestions: lookupLocation.suggestions,\n  searchField: lookupLocation.searchField,\n  editing: lookupLocation.editingSearchField,\n  sky\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  editSearchField: (e) => dispatch(editSearchField()),\n  updateSearchField: (e) => dispatch(updateSearchFieldAndLookupSuggestions(e.target.value)),\n  blurSearchField: () => dispatch(blurSearchField()),\n  selectLocation: (name, latLon) => (e) => {\n    dispatch(setLocName(name));\n    dispatch(setLatLon(latLon));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LookupLocation);","import './ConvertTemp.css';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleTemperatureSystem } from '../reducers/temperatureSystem.reducer.js';\n\nconst round = (num, places = 0) => {\n  const mult = Math.pow(10, places);\n  return Math.round(num * mult) / mult;\n};\nconst kelvinToCelsiusRounded = K => round(kelvinToCelsius(K));\nconst kelvinToFarenheitRounded = K => round(kelvinToFarenheit(K));\nconst kelvinToFarenheit = (temp) => temp * (9 / 5) - 459.67;\nconst kelvinToCelsius = (temp) => temp - 273.15;\n\nclass ConvertTemp extends PureComponent {\n\tconvert = (kelvin) => {\n\t\treturn this.props.temperatureSystem === 'F' ? \n\t\t\tkelvinToFarenheitRounded(kelvin) : \n\t\t\tkelvinToCelsiusRounded(kelvin);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<span onClick={this.props.toggle} className=\"temp\">\n\t\t\t\t<span>{this.props.kelvin ? this.convert(this.props.kelvin) : '--'}</span>\n\t\t\t\t<span className=\"temp-unit\">\n\t\t\t\t\t{String.fromCharCode(176)}{this.props.temperatureSystem}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nConvertTemp.propTypes = {\n\tkelvin: PropTypes.number,\n\tconvert: PropTypes.func,\n\ttoggle: PropTypes.func,\n\ttemperatureSystem: PropTypes.string\n};\n\nconst mapStateToProps = ({temperatureSystem}) => ({temperatureSystem});\n\nconst mapDispatchToProps = (dispatch) => ({\n\ttoggle: () => dispatch(toggleTemperatureSystem())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConvertTemp);","const TOGGLE_TEMPERATURE_SYSTEM = 'TOGGLE_TEMPERATURE_SYSTEM';\n\nconst toggleTemperatureSystem = () => ({type: TOGGLE_TEMPERATURE_SYSTEM});\n\nconst defaultState = 'F';\n\nconst reducer = (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase TOGGLE_TEMPERATURE_SYSTEM:\n\t\t\treturn state === 'F' ? 'C' : 'F';\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport { reducer, toggleTemperatureSystem};","import React, { PureComponent } from 'react';\nimport './CurrentWeather.css';\nimport PropTypes from 'prop-types';\nimport ConvertTemp from './ConvertTemp.js';\n\nclass CurrentWeather extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"current-weather\">\n\t\t\t\t{this.props.pending && <div className=\"pending\">Updating...</div>}\n\t\t\t\t{this.props.error && <div className=\"error\">{this.props.error}</div>}\n\t\t\t\t<div className=\"current-weather-icons\">\n\t\t\t\t\t{this.props.currentWeather.weather.map(\n\t\t\t\t\t\t({main, icon}, idx) => \n\t\t\t\t\t\t\t<div key={`weather-icon-${main}-${idx}`}>\n\t\t\t\t\t\t\t\t<img src={`images/weather-icons/svg/${icon}.svg`} alt={main} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"current-weather-temp\">\n\t\t\t\t\t<div className=\"temp-live\">\n\t\t\t\t\t\t<ConvertTemp kelvin={this.props.currentWeather.main.temp} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t// <div className=\"temp-hi-lo\">\n\t\t\t\t\t// \t<div className=\"temp-hi\">\n\t\t\t\t\t// \t\t<span>Hi: </span>\n\t\t\t\t\t// \t\t<ConvertTemp kelvin={this.props.currentWeather.main.temp_max} />\n\t\t\t\t\t// \t</div>\n\t\t\t\t\t// \t<div className=\"temp-lo\">\n\t\t\t\t\t// \t\t<span>Lo: </span>\n\t\t\t\t\t// \t\t<ConvertTemp kelvin={this.props.currentWeather.main.temp_min} />\n\t\t\t\t\t// \t</div>\n\t\t\t\t\t// </div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"current-weather-description\">\n\t\t\t\t\t{this.props.currentWeather.weather.map(({description}) => description).join(', ')}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCurrentWeather.defaultProps = {\n\tcurrentWeather: {\n\t\tweather: [],\n\t\tmain: {}\n\t},\n\tpending: false,\n\terror: undefined\n};\n\nCurrentWeather.propTypes = {\n  currentWeather: PropTypes.object,\n  pending: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default CurrentWeather;","import React, { PureComponent } from 'react';\nimport './ForecastWeather.css';\nimport PropTypes from 'prop-types';\nimport ConvertTemp from './ConvertTemp.js';\n\nclass ForecastWeather extends PureComponent {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.today = new Date().getDay();\n\t}\n\n\tcomponentWillUpdate() {\n\t\tthis.today = new Date().getDay();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"forecast-weather\">\n\t\t\t\t{this.props.pending && <div className=\"pending\">Updating...</div>}\n\t\t\t\t{this.props.error && <div className=\"error\">{this.props.error}</div>}\n\t\t\t\t{this.props.forecastWeather.list && this.props.forecastWeather.list.map(\n\t\t\t\t\t({temp, weather}, idx) => {\n\t\t\t\t\t\tconst weekdays = {0: 'Sun', 1: 'Mon', 2: 'Tue', 3: 'Wed', 4: 'Thu', 5: 'Fri', 6: 'Sat'};\n\t\t\t\t\t\tconst day = this.today + idx;\n\t\t\t\t\t\tconst weekday = weekdays[day > 6 ? day - 7 : day];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"forecast-weather-day\" key={`forecast-weather-${idx}`}>\n\t\t\t\t\t\t\t\t<div className=\"forecast-weekday\">{weekday}</div>\n\t\t\t\t\t\t\t\t<div className=\"forecast-temperature\">\n\t\t\t\t\t\t\t\t\t<ConvertTemp kelvin={temp.max} />\n\t\t\t\t\t\t\t\t\t<ConvertTemp kelvin={temp.min} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"forecast-day-icon\">\n\t\t\t\t\t\t\t\t\t{weather.map(\n\t\t\t\t\t\t\t\t\t\t({main, icon}, iconIdx) => \n\t\t\t\t\t\t\t\t\t\t\t<img src={`images/weather-icons/svg/${icon}.svg`} alt={main} key={`forecast-day-${idx}-icon-${iconIdx}`} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"forecast-day-description\">\n\t\t\t\t\t\t\t\t\t{weather.map(({description}) => description).join(', ')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nForecastWeather.defaultProps = {\n\tforecastWeather: {\n\t\tlist: []\n\t},\n\tpending: false,\n\terror: undefined\n};\n\nForecastWeather.propTypes = {\n  forecastWeather: PropTypes.object,\n  pending: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default ForecastWeather;","import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { determineLocation } from './reducers/location.reducer.js';\nimport { getForecasts } from './reducers/weather.reducer.js';\n\nimport LookupLocation from './components/LookupLocation.js';\nimport CurrentWeather from './components/CurrentWeather.js';\nimport ForecastWeather from './components/ForecastWeather.js';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.determineLocation();\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    const { lat, lon } = this.props.location;\n    const { lat:nextLat, lon:nextLon } = nextProps.location;\n    const locationHasChanged = nextLat !== lat || nextLon !== lon;\n\n    const currentWeather = nextProps.currentWeather;\n    const dt = currentWeather.dt;\n    const tenMinutes = 600000;\n    const moreThanTenMinutesSinceLastUpdate = (Date.now() - tenMinutes) > parseInt(dt, 10);\n\n    if(locationHasChanged || moreThanTenMinutesSinceLastUpdate) {\n      this.props.getForecasts(nextProps.location);\n    }\n  }\n\n  render() {\n    return (\n      <div className={`weather-container ${this.props.sky}-bg`}>\n        <LookupLocation />\n        <div className=\"weather-forecasts\">\n          <CurrentWeather \n            currentWeather={this.props.currentWeather.data} \n            pending={this.props.currentWeather.pending} \n            error={this.props.currentWeather.error}\n          />\n          <ForecastWeather \n            forecastWeather={this.props.forecastWeather.data} \n            pending={this.props.forecastWeather.pending} \n            error={this.props.forecastWeather.error}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({location, weather, sky}) => ({\n  location,\n  currentWeather: weather.currentWeather,\n  forecastWeather: weather.forecastWeather,\n  sky\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  determineLocation: () => dispatch(determineLocation()),\n  getForecasts: (location) => dispatch(getForecasts(location))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const SET_SKY = 'SET_SKY';\n\nconst setSky = (dt, sunrise, sunset, clouds) => ({\n\ttype: SET_SKY,\n\tsky: dt >= sunrise && dt <= sunset ? 'day' : 'night'\n});\n\nconst reducer = (state = null, action) => {\n\tswitch(action.type) {\n\t\tcase SET_SKY:\n\t\t\treturn action.sky;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport { reducer, setSky };","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer as location } from './location.reducer.js';\nimport { reducer as lookupLocation } from './lookupLocation.reducer.js';\nimport { reducer as temperatureSystem } from './temperatureSystem.reducer.js';\nimport { reducer as weather } from './weather.reducer.js';\nimport { reducer as sky } from './sky.reducer.js';\n\nconst loadStateFromLocalStorage = () => {\n\ttry {\n\t\tconst state = localStorage.getItem('fcc-weather-app');\n\t\treturn state == null ? undefined : JSON.parse(state);\n\t} catch(err) {\n\t\treturn undefined;\n\t}\n};\n\nconst saveStateToLocalStorage = (state) => {\n\ttry {\n\t\tlocalStorage.setItem('fcc-weather-app', JSON.stringify(state));\n\t} catch(err) {\n\t\t// Ignore write errors\n\t}\n};\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === `development`) {\n  const { logger } = require(`redux-logger`);\n\n  middlewares.push(logger);\n}\n\nconst store = createStore(\n\tcombineReducers({\n\t\tlocation, \n\t\tlookupLocation, \n\t\ttemperatureSystem,\n\t\tweather,\n\t\tsky\n\t}), \n\tloadStateFromLocalStorage(),\n\tapplyMiddleware(...middlewares)\n);\n\nstore.subscribe(() => {\n\tconst state = store.getState();\n\tsaveStateToLocalStorage({...state, location: {name: state.location.name}});\n});\n\nexport default store;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './reducers/index.js';\nimport registerServiceWorker from './serviceWorker.js';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\nregisterServiceWorker();"],"sourceRoot":""}